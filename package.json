{
  "name": "vscode-legacy-csproj",
  "displayName": "Legacy csproj",
  "description": "Automatically keeps legacy csproj files up to date as you add and remove files from your project.",
  "version": "0.4.0",
  "publisher": "CanadianCommander",
  "repository": {
    "type": "git",
    "url": "https://github.com/CanadianCommander/vscode-legacy-csproj"
  },
  "engines": {
    "vscode": "^1.85.0",
    "node": ">=18.0.0"
  },
  "categories": [
    "Programming Languages"
  ],
  "activationEvents": [
    "workspaceContains:**/*.csproj"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "legacy-csproj.run-action",
        "title": "Legacy Csproj: Current File Action"
      },
      {
        "command": "legacy-csproj.add-file",
        "title": "Add to Csproj",
        "category": "explorer/context"
      },
      {
        "command": "legacy-csproj.remove-file",
        "title": "Remove from Csproj",
        "category": "explorer/context"
      },
      {
        "command": "legacy-csproj.sync-files",
        "title": "Sync with Csproj",
        "category": "explorer/context"
      }
    ],
    "menus": {
      "explorer/context": [
        {
          "command": "legacy-csproj.add-file"
        },
        {
          "command": "legacy-csproj.remove-file"
        },
        {
          "command": "legacy-csproj.sync-files"
        }
      ]
    },
    "configuration": {
      "title": "Legacy csproj",
      "properties": {
        "legacy-csproj.file-tag-mappings": {
          "title": "File Tag Mappings",
          "description": "Associations between file extensions and the csproj xml tags that should be used to include the file in the project",
          "order": 0,
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "extension": {
                "type": "string",
                "description": "The file extension to associate with the tag",
                "examples": [
                  ".cs"
                ]
              },
              "tag": {
                "type": "string",
                "description": "The csproj xml tag to use for the file",
                "examples": [
                  "Compile"
                ]
              }
            }
          },
          "additionalProperties": false,
          "default": [
            {
              "extension": ".cs",
              "tag": "Compile"
            },
            {
              "extension": ".ts",
              "tag": "TypeScriptCompile"
            },
            {
              "extension": ".tsx",
              "tag": "TypeScriptCompile"
            }
          ]
        },
        "legacy-csproj.indent-spaces": {
          "type": "number",
          "title": "Indent",
          "markdownDescription": "The indent to use when there is not reference indent available.",
          "order": 1,
          "default": 2
        },
        "legacy-csproj.line-ending": {
          "type": "string",
          "title": "Line ending",
          "markdownDescription": "The line ending to use when updating csproj files.",
          "order": 2,
          "enum": [
            "auto",
            "crlf",
            "lf"
          ],
          "default": "auto",
          "enumDescriptions": [
            "Use the line endings of your OS",
            "Use Windows line endings",
            "Use Unix line endings"
          ]
        },
        "legacy-csproj.visual-studio-compat-additional-transforms": {
          "type": "boolean",
          "title": "Additional XML Transforms for Visual Studio compatibility",
          "description": "Apply additional transformations to the csproj xml to make it consistent with Visual Studio's csproj files. This is important when other developers are using Visual Studio to prevent the file from flip flopping",
          "order": 3,
          "default": true
        },
        "legacy-csproj.empty-tag-expansion": {
          "type": "array",
          "title": "Empty Tags To Expand",
          "order": 4,
          "default": [],
          "items": {
            "type": "string"
          },
          "description": "A list of tags that should be expanded to include a closing tag when empty. For some reason Visual Studio keeps expanding certain tags. Set this up as your project needs so that the csproj file doesn't flip flop between the two formats."
        },
        "legacy-csproj.ignore-files-by": {
          "type": "string",
          "title": "Ignore files using",
          "markdownDescription": "How to detect if files should be ignored or not",
          "order": 5,
          "enum": [
            "none",
            "gitignore"
          ],
          "default": "gitignore",
          "enumDescriptions": [
            "Don't ignore any files",
            "Ignore files that are ignored by git"
          ]
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "vscode-test",
    "test-unit": "jest --config jest.config.json",
    "vsce": "vsce"
  },
  "devDependencies": {
    "@types/mocha": "^10.0.6",
    "@types/node": "18.x",
    "@types/vscode": "^1.85.0",
    "@typescript-eslint/eslint-plugin": "^6.18.1",
    "@typescript-eslint/parser": "^6.18.1",
    "@vscode/test-cli": "^0.0.4",
    "@vscode/test-electron": "^2.3.8",
    "@vscode/vsce": "^2.22.0",
    "eslint": "^8.56.0",
    "prettier": "^3.2.1",
    "typescript": "^5.3.3"
  },
  "dependencies": {
    "fast-xml-parser": "^4.3.3",
    "globby": "^14.0.0"
  }
}
